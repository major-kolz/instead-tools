Сопроводить примерами. Для cutscene можно переписать воспоминания из "Провала". Разбить их на несколько комнат, определить _cutDefTxt как изображение, придумать для чего использовать update (кроме изменения имени)

minIDE, assit, CLI с возможностями:
- Подготовить папку
- Подготовить архив (исключить swap-файлы vim, аналогичные у gedit и emacs, не включать сам скрипт, проверить соответствие музыки нижнему регистру (дублируя замечание в notify-send))
Статический анализатор кода. Предложить, чтобы код прогонялся самим INSTEAD'ом, при запуске его с параметром debug. Функциональность:
	- Изменяемые переменные, что не записываются в файл сохранения
	- Табличная переменная и функция с таблицей-аргументом (некорректное использование).
	- Несоответствие регистра в именах вызываемых ресурсов (для Windows пользователей)
	- Если у объекта нет ни dsc, ни inv - то что-то тут не так
	- Последовательный обход lua-фалов, начиная с main и далее по require'ам
	- Безответные ссылки на xact

Классы:
- Машина состояний
- Кодовый замок (с переходом в другую комнату; можно и картотеки на основе делать)
- Замок (добавляют переход в дверь)
- Хранилища
- Апостериорное меню (объекты с широкой областью применения, что её нельзя сузить исходя из контекста)
- Метакласс

В example1 должен быть пример использования useful. Там же - использование string.format
